#!/bin/bash -l

BASH_HISTORY_FILE=/root/.bash_history
BASHRC_FILE=/root/.bashrc
PROVIDER_FILE=/root/github.com/hashicorp/terraform-provider-hashicups/hashicups/provider.go
DATA_SOURCE_COFFEE_FILE=/root/github.com/hashicorp/terraform-provider-hashicups/hashicups/data_source_coffee.go
PROVIDER_BINARY_FILE=/root/github.com/hashicorp/terraform-provider-hashicups/.terraform.d/plugins/hashicorp.com/edu/hashicups/0.2/linux_amd64/terraform-provider-hashicups

# Check the user signed up
grep -q "curl localhost:19090/signup" '$BASH_HISTORY_FILE' || fail-message "You haven't run 'curl localhost:19090/signup' yet."

# Check the user signed in
grep -q "curl localhost:19090/signin" '$BASH_HISTORY_FILE' || fail-message "You haven't run 'curl localhost:19090/signin' yet."

# Check the `HASHICUPS_TOKEN` env var was set
if [ "$HASHICUPS_TOKEN" = "" ]; then
    fail-message "You did not set the 'HASHICUPS_TOKEN' env var."
fi

# Check the `HASHICUPS_TOKEN` env var was added to the bashrc
if ! grep -q 'HASHICUPS_TOKEN' "$BASHRC_FILE"; then
    fail-message "You need to add the 'HASHICUPS_TOKEN' env var export to your '~/.bashrc' file."
    exit 1
fi

# Check `hashicups/provider.go` has the `username` and `password` schemas
if ! grep -q 'username' "$PROVIDER_FILE"; then
    fail-message "You need to add the 'username' schema in 'hashicups/provider.go'."
    exit 1
fi

if ! grep -q 'password' "$PROVIDER_FILE"; then
    fail-message "You need to add the 'password' schema in 'hashicups/provider.go'."
    exit 1
fi

# Check `hashicups/provider.go` has the new imports
if ! grep -q 'github.com/hashicorp-demoapp/hashicups-client-go' "$PROVIDER_FILE"; then
    fail-message "You need to add the 'github.com/hashicorp-demoapp/hashicups-client-go' import to 'hashicups/provider.go'."
    exit 1
fi

if ! grep -q 'github.com/hashicorp/terraform-plugin-sdk/v2/diag' "$PROVIDER_FILE"; then
    fail-message "You need to add the 'github.com/hashicorp/terraform-plugin-sdk/v2/diag' import to 'hashicups/provider.go'."
    exit 1
fi

# TODO: Check that the new dependencies were installed with go mod vendor

# Check `hashicups/provider.go` has the new `providerConfigure` function
if ! grep -q 'providerConfigure' "$PROVIDER_FILE"; then
    fail-message "You need to add the 'providerConfigure' function to 'hashicups/provider.go'."
    exit 1
fi

# Check the provider has been built and installed
if ! test -f "$PROVIDER_BINARY_FILE"; then
    fail-message "You haven't built and installed the provider binary."
    exit 1
fi

# Check the `HASHICUPS_USERNAME` env var was set
if [ "$HASHICUPS_USERNAME" = "" ]; then
    fail-message "You did not set the 'HASHICUPS_USERNAME' env var."
fi

# Check the `HASHICUPS_PASSWORD` env var was set
if [ "$HASHICUPS_PASSWORD" = "" ]; then
    fail-message "You did not set the 'HASHICUPS_PASSWORD' env var."
fi

# Check the `HASHICUPS_USERNAME` env var was added to `~/.bashrc`
if ! grep -q 'HASHICUPS_USERNAME' "$BASHRC_FILE"; then
    fail-message "You need to add the 'HASHICUPS_USERNAME' env var export to your '~/.bashrc' file."
    exit 1
fi

# Check the `HASHICUPS_PASSWORD` env var was added to `~/.bashrc`
if ! grep -q 'HASHICUPS_PASSWORD' "$BASHRC_FILE"; then
    fail-message "You need to add the 'HASHICUPS_PASSWORD' env var export to your '~/.bashrc' file."
    exit 1
fi

# Check the login was attempted in the `docker-compose` logs
cd ../docker_compose
DOCKER_COMPOSE_SIGNIN_LOGS=$(docker-compose logs | grep signin)
if ! grep -q 'Handle User | signin' "$DOCKER_COMPOSE_SIGNIN_LOGS"; then
    fail-message "There was not a successful login attempt to HashiCups."
    exit 1
fi

# TODO: check the state file and outputs
